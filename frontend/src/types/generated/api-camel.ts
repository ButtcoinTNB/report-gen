/**
 * GENERATED FILE - DO NOT EDIT DIRECTLY
 * Generated by generate-interfaces.ts
 * from api.ts
 * 
 * This file contains camelCase versions of the snake_case interfaces
 * defined in the API types.
 */

import { adaptApiResponse } from '../../utils/adapters';

/**
 * Utility type for converting snake_case properties to camelCase
 */
export type CamelCase<T> = {
  [K in keyof T as K extends string 
    ? K extends `${infer A}_${infer B}` 
      ? `${A}${Capitalize<B>}` 
      : K 
    : never]: T[K] extends Record<string, any> 
      ? CamelCase<T[K]> 
      : T[K] extends Array<infer U> 
        ? U extends Record<string, any> 
          ? Array<CamelCase<U>> 
          : T[K] 
        : T[K]
};
import {
  AnalysisDetails,
  ApiResponse,
  GenerateRequest,
  RefineRequest,
  ProgressUpdate,
  ReportResponse,
  AnalysisResponse,
  ReportPreview,
  EditReportResponse,
} from './api';

/**
 * Common type conversion utilities
 * These functions help maintain type safety when converting between API response formats
 */
/**
 * Analysis details from backend in snake_case format
 */
export interface AnalysisDetailsCamel {
  valore: string;
  confidenza: 'ALTA' | 'MEDIA' | 'BASSA';
  richiedeVerifica: boolean;
}

/**
 * Helper function to convert API response to frontend format
 */
export function adaptAnalysisDetails(response: AnalysisDetails): AnalysisDetailsCamel {
  return adaptApiResponse<AnalysisDetailsCamel>(response);
}

/**
 * Base response interface for consistent error handling
 */
export interface ApiResponseCamel {
  status: 'success' | 'error';
  message: string;
}

/**
 * Helper function to convert API response to frontend format
 */
export function adaptApiResponse(response: ApiResponse): ApiResponseCamel {
  return adaptApiResponse<ApiResponseCamel>(response);
}

/**
 * Backend API interface for GenerateRequest
 */
export interface GenerateRequestCamel {
  reportId: string;
  documentIds: string[];
  additionalInfo?: string;
  templateId?: string;
}

/**
 * Helper function to convert API response to frontend format
 */
export function adaptGenerateRequest(response: GenerateRequest): GenerateRequestCamel {
  return adaptApiResponse<GenerateRequestCamel>(response);
}

/**
 * Backend API interface for RefineRequest
 */
export interface RefineRequestCamel {
  reportId: string;
  instructions: string;
}

/**
 * Helper function to convert API response to frontend format
 */
export function adaptRefineRequest(response: RefineRequest): RefineRequestCamel {
  return adaptApiResponse<RefineRequestCamel>(response);
}

/**
 * Backend API interface for ProgressUpdate
 */
export interface ProgressUpdateCamel extends ApiResponseCamel {
  step: number;
  progress: number;
}

/**
 * Helper function to convert API response to frontend format
 */
export function adaptProgressUpdate(response: ProgressUpdate): ProgressUpdateCamel {
  return adaptApiResponse<ProgressUpdateCamel>(response);
}

/**
 * Backend API interface for ReportResponse
 */
export interface ReportResponseCamel extends ApiResponseCamel {
  content: string;
  error?: boolean;
}

/**
 * Helper function to convert API response to frontend format
 */
export function adaptReportResponse(response: ReportResponse): ReportResponseCamel {
  return adaptApiResponse<ReportResponseCamel>(response);
}

/**
 * Backend API interface for AnalysisResponse
 */
export interface AnalysisResponseCamel extends ApiResponseCamel {
  extractedVariables: Record<string, AnalysisDetails>;
  fieldsNeedingAttention: string[];
}

/**
 * Helper function to convert API response to frontend format
 */
export function adaptAnalysisResponse(response: AnalysisResponse): AnalysisResponseCamel {
  return adaptApiResponse<AnalysisResponseCamel>(response);
}

/**
 * Backend API interface for ReportPreview
 */
export interface ReportPreviewCamel extends ApiResponseCamel {
  reportId: string;
  previewUrl: string;
}

/**
 * Helper function to convert API response to frontend format
 */
export function adaptReportPreview(response: ReportPreview): ReportPreviewCamel {
  return adaptApiResponse<ReportPreviewCamel>(response);
}

/**
 * Backend API interface for EditReportResponse
 */
export interface EditReportResponseCamel extends ReportPreviewCamel {
}

/**
 * Helper function to convert API response to frontend format
 */
export function adaptEditReportResponse(response: EditReportResponse): EditReportResponseCamel {
  return adaptApiResponse<EditReportResponseCamel>(response);
}

